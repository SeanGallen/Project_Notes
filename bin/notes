#!/usr/bin/env ruby
$LOAD_PATH.unshift File.realdirpath('../../lib', __FILE__)
require 'notes'

notes = [{'descrip' => 'Add 1 to 2',                                    'example' => '1 + 2  # => 3'},
         {'descrip' => 'Subtract 5 from 2',                             'example' =>  '2 - 5  # => -3'},
         {'descrip' => 'Is 1 less than 2',                              'example' => '1 < 2  # => true'},
         {'descrip' => 'Is 1 equal to 2',                               'example' => '1 == 2 # => 3'},
         {'descrip' => 'Is 1 greater than 2',                           'example' => '1 > 2  # => 3'},
         {'descrip' => 'Is 1 less than or equal to 2',                  'example' => '1 <= 2 # => 3'},
         {'descrip' => 'Is 1 greater than or equal to 2',               'example' => '1 >= 2 # => 3'},
         {'descrip' => 'Convert 1 to a float',                          'example' => '1.to_f # => 3'},
         {'descrip' => 'Concatenate two arrays',                        'example' => '[1,2] + [2, 3]   # => [1, 2, 2, 3]'},
         {'descrip' => 'Remove elements in second array from first',    'example' => '[1,2,4] - [2, 3] # => [1,4]'},
         {'descrip' => 'Access an element in an array by its index',    'example' => '["a","b","c"][0] # => "a"'},
         {'descrip' => 'Find out how big the array is',                 'example' => '["a","b"].length # => 2'}]

help = "Uasge: notes [filter1] [filter2] [...]\nNotes that are accessible from the command line."

if ARGV.length == 0
  notes.each do |note|
  puts note["descrip"].ljust(1) + note["example"].rjust(100 - note["descrip"].length)
  end
elsif ARGV.include?('-h')
  puts help
elsif ARGV.include?('plus')
  ARGV.shift
  ARGV << 'add'
   Notes.new.select_all(notes, ARGV)
  ARGV.pop
  ARGV << '\\+'
   Notes.new.select_all(notes, ARGV)
elsif ARGV.include?('integer')
  ARGV.shift
  ARGV << /[0-9]/
   Notes.new.select_all(notes, ARGV)
else
   Notes.new.select_all(notes, ARGV)
end






